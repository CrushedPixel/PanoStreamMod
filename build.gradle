buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sponge"
            url = "https://repo.spongepowered.org/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.3-SNAPSHOT'
    }
}

repositories {
    maven {
        name = "SpongePowered Repo"
        url = "http://repo.spongepowered.org/maven/"
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'

sourceCompatibility = 1.8
targetCompatibility = 1.8

version = "0.1"
group= "com.replaymod"
archivesBaseName = "panostream"

minecraft {
    coreMod = 'com.replaymod.panostream.coremod.LoadingPlugin'
    version = '1.8-11.14.4.1563'
    runDir = "eclipse"
    mappings = "stable_nodoc_18"
}

dependencies {
    compile 'org.projectlombok:lombok:1.16.4'
    compile 'org.spongepowered:mixin:0.4.3'

    compile project(':jGui')
    compile project(':SimpleConfig')
}

def getGitCommitHash() {
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--always', '--dirty=*'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    } catch (e) {
        return "unknown"
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version':project.version + '-' + getGitCommitHash(), 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    dependsOn configurations.runtime

    def shade = {files(configurations.runtime.findAll { c ->
        ['mixin', 'SimpleConfig', 'jGui'].any {c.name.startsWith("$it-")}
    })}

    from {
        shade().collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }

    manifest {
        attributes('FMLCorePluginContainsFMLMod': 'com.replaymod.panostream.coremod.LoadingPlugin',
        'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
        'TweakOrder': '0',
        'FMLAT': 'panostream_at.cfg')
    }
}

defaultTasks 'build'